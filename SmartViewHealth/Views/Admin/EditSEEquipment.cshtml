@model SmartViewHealth.Models.CreateSEViewModel

@using (Html.BeginForm("PutEditSEEquipment", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Health Systems", "HealthSystems")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Facilities of " + @Model._HealthSystem.HealthSystemName, "Facilities", new { id = Model._Facility.HealthSystemID })</li>
        <li class="breadcrumb-item">@Html.ActionLink("Locations of " + @Model._Facility.FacilityName, "Locations", new { id = Model._Facility.Id })</li>
        <li class="breadcrumb-item">@Html.ActionLink("Equipment of " + @Model._Location.LocationName, "Equipment", new { id = Model._Location.Id })</li>
        <li class="breadcrumb-item active">Edit @Model._Equipment.EquipmentName</li>
    </ol>

    @Html.HiddenFor(m => m._Equipment.Equipment_Type_Id, new { @Value = ViewBag.EquipmentTypeId })
    @Html.HiddenFor(m => m._Location.Id)
    @Html.HiddenFor(m => m._Equipment.Id)

    <!-- Tasks Modal -->
    <div class="modal fade" id="CreateTasksModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Tasks</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="iTaskId" name="iTaskId" value="">
                    <div class="form-group">
                        <span class="control-label col-md-2">Task Type</span>
                        <div class="col-md-10">
                            <select name="ddlTaskType" id="ddlTaskType" class="form-control" disabled>
                                <option value="D">Daily</option>
                                <option value="W">Weekly</option>
                                <option value="M">Monthly</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <span class="control-label col-md-2">Task Description</span>
                        <div class="col-md-10">
                            <textarea id="tbTaskText" rows="8" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <span class="control-label col-md-2">Active?</span>
                        <div class="col-md-10">
                            <select name="ddlTaskRowStaCd" id="ddlTaskRowStaCd" class="form-control">
                                <option value="A">Active</option>
                                <option value="O">Obsolete</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button id="btnTasks" type="button" class="btn btn-primary" onclick="return CreateTask();">Add Task</button>
                </div>
            </div>
        </div>
    </div>

    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000" style="position: fixed; top: 4rem; right: 1rem; z-index: 1000000;">
        <div class="toast-header">
            <strong class="mr-auto">Field Validation</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body">
            <span id="toast-body-text">#</span>
        </div>
    </div>

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model._Equipment.EquipmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._Equipment.EquipmentName, new { htmlAttributes = new { @class = "form-control", @id = "EquipmentName" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Location.LocationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._Location.LocationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Equipment.lst_mod_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._Equipment.lst_mod_id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.UserName } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Equipment.lst_mod_ts, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._Equipment.lst_mod_ts, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.CurrentTime } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Equipment.row_sta_cd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model._Equipment.row_sta_cd, new List<SelectListItem>
                     {
                        new SelectListItem { Text = "Active", Value = "A", Selected = true},
                        new SelectListItem { Text = "Obsolete", Value = "O"}
                       }
                 , new { @class = "form-control" })
            </div>
        </div>

        <hr />

        <div class="form-group col-md-10">
            <div style="display: flex; align-content:space-between; align-items: center; vertical-align: middle; padding-bottom: 5px;">
                <div>
                    <h5>Daily Tasks</h5>
                </div>
                <div style="margin-left: auto;">
                    <button type="button" class="btn btn-primary btn-sm" onclick="ShowTasksModal('D');">Add Daily Task</button>
                </div>
            </div>
            <div id="SE_Tasks_Daily" name="SE_Tasks_Daily">
                @Html.Partial("SC_TaskList", Model._Equipment_SE_Tasks_Daily)
            </div>
        </div>

        <div class="form-group col-md-10">
            <div style="display: flex; align-content:space-between; align-items: center; vertical-align: middle; padding-bottom: 5px;">
                <div>
                    <h5>Weekly Tasks</h5>
                </div>
                <div style="margin-left: auto;">
                    <button type="button" class="btn btn-primary btn-sm" onclick="ShowTasksModal('W');">Add Weekly Task</button>
                </div>
            </div>
            <div id="SE_Tasks_Weekly" name="SE_Tasks_Weekly">
                @Html.Partial("SC_TaskList", Model._Equipment_SE_Tasks_Weekly)
            </div>
        </div>

        <div class="form-group col-md-10">
            <div style="display: flex; align-content:space-between; align-items: center; vertical-align: middle; padding-bottom: 5px;">
                <div>
                    <h5>Monthly Tasks</h5>
                </div>
                <div style="margin-left: auto;">
                    <button type="button" class="btn btn-primary btn-sm" onclick="ShowTasksModal('M');">Add Monthly Task</button>
                </div>
            </div>
            <div id="SE_Tasks_Monthly" name="SE_Tasks_Monthly">
                @Html.Partial("SC_TaskList", Model._Equipment_SE_Tasks_Monthly)
            </div>
        </div>

        <br /><br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Cancel" class="btn btn-secondary" onclick="BackToPrevious();" />
                <input type="submit" value="Update" class="btn btn-primary" onclick="return ValidateForm();" />
            </div>
        </div>

    </div>
}



@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            //make the health systems tab "active"
            $("#tabHealthSystems").addClass("active");
        });

        function ValidateForm() {
            var equipmentName = $("#EquipmentName").val();

            if (equipmentName == '') {
                $("#toast-body-text").text("Equipment Name is required.");
                $(".toast").toast('show');
                return false;
            }

            if (equipmentName.length < 3) {
                $("#toast-body-text").text("Equipment Name must be at least 3 characters long.");
                $(".toast").toast('show');
                return false;
            }

            return true;
        }

        function ShowTasksModal(sTaskType) {
            //clear fields
            $("#iTaskId").val('');
            $("#ddlTaskType").val(sTaskType);
            $("#tbTaskText").val('');
            $("#ddlTaskRowStaCd").val('A');
            

            //set button text
            switch (sTaskType) {
                case 'D':
                    $('#btnTasks').text('Add Daily Task');
                    break;
                case 'W':
                    $('#btnTasks').text('Add Weekly Task');
                    break;
                case 'M':
                    $('#btnTasks').text('Add Monthly Task');
                    break;
            }

            $("#CreateTasksModal").modal();
        }

        function ShowEditTasksModal(iTaskId, sTaskType, sTaskRowStaCd) {
            //clear fields
            $("#iTaskId").val('');
            
            //set button text
            $('#btnTasks').text('Update Task');

            //populate fields
            $("#iTaskId").val(iTaskId);
            $("#ddlTaskType").val(sTaskType);
            $("#ddlTaskRowStaCd").val('A');

            $("#CreateTasksModal").modal();
        }

        function CreateTask() {
            //retrieve values
            var iTaskId = $("#iTaskId").val();
            var ddlTaskType = $("#ddlTaskType").val();
            var tbTaskText = $("#tbTaskText").val();
            var ddlTaskRowStaCd = $("#ddlTaskRowStaCd").val();

            //add validation
            if (tbTaskText == '') {
                $("#toast-body-text").text("Task is required.");
                $(".toast").toast('show');
                return false;
            }
            if (tbTaskText.length < 3) {
                $("#toast-body-text").text("Task must be at least 3 characters long.");
                $(".toast").toast('show');
                return false;
            }
            

            //add/edit logic
            if (iTaskId == '') {
                iTaskId = -1;
            }

            //turn fields into json
            var jsonData = {
                "Id": iTaskId,
                "Equipment_Parent_Id": "@Model._Equipment.Id",
                "Task_Type_Id": ddlTaskType,
                "Task_Text": tbTaskText,
                "lst_mod_id": '@ViewBag.UserName',
                "entry_user": '@ViewBag.UserName',
                "lst_mod_ts": '@ViewBag.CurrentTime',
                "entry_ts": '@ViewBag.CurrentTime',
                "row_sta_cd": ddlTaskRowStaCd,
            };

            $.ajax({
                url: "@Url.Action("UpdateSEEquipmentTasks", "Admin")",
                type: "POST",
                data: '{ seTasks: ' + JSON.stringify(jsonData) + '}',
                dataType: 'HTML',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    $("#CreateTasksModal").modal('toggle');

                    switch (ddlTaskType) {
                        case 'D':
                            $('#SE_Tasks_Daily').html(result);
                            break;
                        case 'W':
                            $('#SE_Tasks_Weekly').html(result);
                            break;
                        case 'M':
                            $('#SE_Tasks_Monthly').html(result);
                            break;
                    }

                },
                error: function () {
                    alert("Error while inserting data");
                }
            });
        }

        function BackToPrevious() {
            var url = '@Url.Action("Equipment", "Admin", new { id = Model._Location.Id })';
            window.location = url;
        }
    </script>
}